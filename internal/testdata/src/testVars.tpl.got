{{define package}}template{{end package}}
{{define name}}TestVars{{end name}}
{{define imports}}
	"html"
{{end imports}}

{{define body}}

{{= "Evaluates to a string" }}

type MyStruct struct {
    a int
}

{{
Here is a number: {{i givesInt() }}
And another: {{u givesUint() }}
And a float: {{f 45/6 }}
Stringer: {{v "something" }}
Bytes: {{w []byte("else")}}
Boolean: {{b 2 == 4/2}}

Escaped: {{!= "This<>"}}
That: {{!h "That\nThe Other"}}

Literal string: {{L givesString() }}
Literal int: {{L givesInt() }}
Type string: {{T givesString() }}
Type struct: {{T MyStruct{a:1} }}
Type struct 2: {{PT MyStruct{a:1} }}
}}

// Test for newlines here
for i := 0; i < 5; i++ {
{{
    {{= "Num"}} = {{= strconv.Itoa(i) }}
}}
}


{{# Here is a comment }}

{{end body}}

{{: "runner.inc"}}

func givesString() string {
	return "Me"
}

func givesInt() int {
	return -5
}

func givesUint() uint {
	return 6
}


