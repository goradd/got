// Code generated by "stringer -type=tokenType"; DO NOT EDIT.

package got

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[itemEOF-0]
	_ = x[itemError-1]
	_ = x[itemStrictBlock-2]
	_ = x[itemNamedBlock-3]
	_ = x[itemEndBlock-4]
	_ = x[itemSubstitute-5]
	_ = x[itemInclude-6]
	_ = x[itemEnd-7]
	_ = x[itemGo-8]
	_ = x[itemText-9]
	_ = x[itemRun-10]
	_ = x[itemString-11]
	_ = x[itemBool-12]
	_ = x[itemInt-13]
	_ = x[itemUInt-14]
	_ = x[itemFloat-15]
	_ = x[itemInterface-16]
	_ = x[itemBytes-17]
	_ = x[itemComment-18]
	_ = x[itemIf-19]
	_ = x[itemFor-20]
	_ = x[itemJoin-21]
	_ = x[itemParam-22]
}

const _tokenType_name = "itemEOFitemErroritemStrictBlockitemNamedBlockitemEndBlockitemSubstituteitemIncludeitemEnditemGoitemTextitemRunitemStringitemBoolitemIntitemUIntitemFloatitemInterfaceitemBytesitemCommentitemIfitemForitemJoinitemParam"

var _tokenType_index = [...]uint8{0, 7, 16, 31, 45, 57, 71, 82, 89, 95, 103, 110, 120, 128, 135, 143, 152, 165, 174, 185, 191, 198, 206, 215}

func (i tokenType) String() string {
	if i < 0 || i >= tokenType(len(_tokenType_index)-1) {
		return "tokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _tokenType_name[_tokenType_index[i]:_tokenType_index[i+1]]
}
